"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TeamRoutes = void 0;
const team_controller_1 = require("@/controllers/team.controller");
const cloudinary_1 = require("@/middlewares/cloudinary");
const packageLimitMiddleware_1 = __importDefault(require("@/middlewares/packageLimitMiddleware"));
const teamCacheMiddleware_1 = __importDefault(require("@/middlewares/teamCacheMiddleware"));
const validateRequest_1 = __importDefault(require("@/middlewares/validateRequest"));
const team_validation_1 = require("@/validations/team.validation");
const express_1 = require("express");
const router = (0, express_1.Router)();
router.post("/create", packageLimitMiddleware_1.default.teamCreate, cloudinary_1.upload.single("file"), (0, cloudinary_1.uploadSingleFile)("team-logos"), (0, validateRequest_1.default)(team_validation_1.TeamValidationSchema.createTeamValidation), team_controller_1.TeamController.createTeam);
router.get("/", teamCacheMiddleware_1.default.all, team_controller_1.TeamController.getAllTeams);
router.get("/single/:id", teamCacheMiddleware_1.default.single, team_controller_1.TeamController.getSingleTeam);
router.get("/my-teams/:adminId", teamCacheMiddleware_1.default.myTeams, team_controller_1.TeamController.getMyTeams);
router.get("/joined-teams/:memberId", teamCacheMiddleware_1.default.joinedTeams, team_controller_1.TeamController.getJoinedTeams);
router.delete("/delete/:id", team_controller_1.TeamController.deleteTeam);
router.post("/send-leave-request/:teamId/:memberId", team_controller_1.TeamController.sendLeaveRequest);
router.post("/cancel-leave-request/:teamId/:memberId", team_controller_1.TeamController.cancelLeaveRequest);
router.post("/reject-leave-request/:teamId/:memberId", team_controller_1.TeamController.rejectLeaveRequest);
router.post("/accept-leave-request/:teamId/:memberId", team_controller_1.TeamController.acceptLeaveRequest);
router.delete("/remove-member/:teamId/:memberId", team_controller_1.TeamController.removeMember);
router.patch("/update/:id", cloudinary_1.upload.single("file"), (0, cloudinary_1.uploadSingleFile)("team-logos"), (0, validateRequest_1.default)(team_validation_1.TeamValidationSchema.updateTeamValidation), team_controller_1.TeamController.updateTeam);
exports.TeamRoutes = router;
